##
    1、Redis进行预减库存减少数据库访问
    1.1）系统初始化，把商品库存数量加载到redis
        实现该接口InitializingBean，将库存初始化到redis中。
    1.2)收到请求，Redis预减库存，库存不足，直接返回
    1.3）请求入队，立即返回排队中。
    1.4）请求出队，生成订单，减少库存
    1.5）客户端轮询，是否秒杀成功


    2、内存标记减少Redis访问
        主要标记商品是否没有库存
        具体步骤：在本地使用一个map保存当前商品是否没有库存，当库存没有时候，标记减少redis访问


    3、请求先入缓冲，异步下单，增强用户体验
    4、RabbitMQ
    https://www.cnblogs.com/web424/p/6761153.html
    4.1） 安装erlang
    4.2)  安装rabbitMq

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>

        创建日志的生产者和消费者以及配置队列

        问题：使用mq的guest用户登陆需要添加配置
        #vim rabbitmq.config
        编辑内容如下：
        [{rabbit, [{loopback_users, []}]}].
        这里的意思是开放使用，rabbitmq默认创建的用户guest，密码也是guest，这个用户默认只能是本机访问，localhost或者127.0.0.1，从外部访问需要添加上面的配置。

       四种模式：
       Direct Exchange模式（点对点模式）：
       生产者和消费者共同使用一个消费队列（一个生产者和一个消费者）

       工作者模式：
       一个生产者和多个消费者

       Topic Exchange模式：
       设置队列和交换机得路由key，当生产者发送消息时，知道路由key，比较
       有没有合适key


    5、Nginx水平扩展


    redis常用操作：
        查看所有key : keys *
        清楚所有key : flushdb