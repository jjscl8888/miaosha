##
1、页面缓存 + URL缓存 + 对象缓存（减少数据库访问）
https://www.baidu.com/link?url=6c3ot2-qCDO9OpuqxAdAFGuV9yJx5mLIR6ifnkqgy-o15lYrofTkcLd07EU_ZH-r4mKL4V9otw1Df9c3OA_s5w360fGYlHk8_aO9p-ho3X_&wd=&eqid=c924f8760024ec50000000035eac0e5c

页面缓存：（只适合短时间缓存---商品列表页面(无参数)）
   a)取缓存；
   b)手动渲染模板
   c)结果输出
    主要手动渲染页面放入缓存，并从缓存中获取返回。

URL缓存:(商品详情页面（有参数，有针对性）)
   a)取缓存；
   b)手动渲染模板
   c)结果输出

对象缓存（粒度更细）

2、页面静态化，前后端分离
常用技术AngularJS、Vue.js
优点：利用浏览器的缓存html页面，然后通过ajax获取数据


3、总结
    3.1）JS/CSS压缩，减少流量
    3.2）JS/CSS组合，减少连接数
    3.3）CDN就近访问

##
    缓存和数据库执行顺序：
1）更新操作时候，先更新数据库在更新缓存（因为先删除时候，其他线程读取后又存入redis中，导致不一致）


##
    GET和POST区别：
    GET幂等的，即执行不会影响数据。

## 超卖问题：
   1）秒杀涉及三个过程：
   1.1）查看库存
   1.2）是否重复秒杀
    当同一个用户同时发送两个请求时候，容易导致一个用户秒杀多个。解决办法。通过数据库使得订单表中userid+orderid建立唯一索引保证
   1.3）减库存
    当有多个线程同时检查库存时候，存在多减：解决办法，通过数据库stock_count > 0
    update miaosha_goods set stock_count = stock_count - 1 where goods_id = #{goodsId} and stock_count > 0
